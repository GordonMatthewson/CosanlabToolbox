function vrc = CalinskiHarabasz(X, IDX, C, SUMD)
% Calculate Calinski-Harabasz Criterion for evaluating the optimal k for a
% given clusteing solution. Works best with kmean clustering.
% See 
% predictions.  Requires units to be ranked ordered from 1:end.  Will work
% for Gianaros or Pain datasets.  Accuracies are not penalized for missing
% cases.  Probably best to run this on single subjects and then aggregate
% accuracies across subjects.
%
% acc = ContinuousAccuracy(obj, pattern, unit)
%
% Inputs:
% ---------------------------------------------------------------------
% obj                       : fmri_data() object with data stacked by
%                             increasing levels of prediction.  Make sure 
%                             obj.Y includes the training labels
%
% pattern                   : fmri_data() object with weight pattern
%
% predrange                 : specify the range of predictions (e.g., 1:5)
%
% unit                      : specify the unit increase in prediction (e.g., 1 or 2)
%
% Outputs:
% ---------------------------------------------------------------------
% acc                       : accuracy of prediction for specified units
%
% Examples:
% ---------------------------------------------------------------------
% acc = ContinuousAccuracy(dat, pine, 1:5, 1)
%
% Original version: Copyright Luke Chang 12/2013
%Number of Clusters
clusts = unique(IDX);
NC = length(clusts);
NOBS = size(X,1);
Ni= accumarray(IDX,ones(length(IDX),1));

%Calculate within sum of squares
%SUMD is the sum of squared Euclidean Distance
ssw = sum(SUMD,1);

%Calculate Between sum of squares
ssb = sum(Ni.*(pdist2(C,mean(X))).^2);

vrc = (ssb/ssw) * (NOBS-NC)/(NC-1);
